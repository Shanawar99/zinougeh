pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'git clone https://github.com/Shanawar99/zinougeh.git'
            }
        }

        stage('Install Terraform') {
            steps {
                // Install Terraform
                sh 'curl -O https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip'
                sh 'unzip terraform_0.15.5_linux_amd64.zip'
                sh 'sudo mv terraform /usr/local/bin/'
                sh 'rm terraform_0.15.5_linux_amd64.zip'
            }
        }

        stage('Terraform Apply') {
            steps {
                // Run Terraform commands
                sh 'terraform init'
                sh 'terraform apply -auto-approve'
            }
        }
        
        stage('Retrieve EC2 Public IP') {
            steps {
                script {
                    def publicIp = sh(script: 'terraform output public_ip', returnStdout: true).trim()
                    env.EC2_PUBLIC_IP = publicIp
                }
            }
        }
        stage('MicroK8s installation') {
            steps {
                script {
                    def sshKey = credentials('jenkins-key')
                    // Copy script to remote instance using scp
                    sh '''
                        scp -o StrictHostKeyChecking=no -i ${sshKey} task1/microk8s/install_microk8s.sh ubuntu@${env.EC2_PUBLIC_IP}:~/install_microk8s.sh
                    '''                    
                    // SSH into the remote instance and execute the script
                    sh '''
                        ssh -o StrictHostKeyChecking=no -i ${sshKey} ubuntu@${env.EC2_PUBLIC_IP} 'sudo chmod +x ~/install_microk8s.sh && sudo ./install_microk8s.sh'
                    '''
                }
            }
        }

    }
}
